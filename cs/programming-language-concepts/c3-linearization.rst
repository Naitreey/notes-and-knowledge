C3 linearization
================
overview
--------

* definition of linearization. The list of the ancestors of a class C,
  including the class itself, ordered from the nearest ancestor to the furthest.
  
* C3 linearization is a superclass linearization algorithm that satisfies
  3 criteria:

  - a consistent extended precedence graph. (what's the definition of this?)
  
  - local precedence. 在 linearization list 中, C 的各个直接父类具有最高的优先级,
    并且按照从左至右的顺序, 优先级依次降低.
  
    保证 local precedence, 则在 MRO 时是很符合直觉的, 即最近的优先级最高.
  
  - monotonicity. A MRO is monotonic when the following is true: if C1 precedes
    C2 in the linearization of C, then C1 precedes C2 in the linearization of any
    subclass of C.
  
    保证 MRO 的单调性, 就不会在子类 (D) 和父类 (C) 各自的 linearization 中, 出现
    一个是 C1C2 另一个是 C2C1 之类的矛盾情况.

* 一个好的 linearization 应该保证 local precedence 和 monotonicity 两个准则.
  因为这样的话, 给定一个子类, 它的继承顺序会比较符合直觉, 容易理解和掌握,
  并且不会出现逻辑上相互矛盾的地方.

* Naming: C3 refers to the 3 criteria the linearization must satisfy.

algorithm
---------
定义,

- a list of classes ``[C1, C2, ..., CN]`` is denoted by ``C1 C2 ... CN``;

- the head of the list is ``head = C1``

- the tail of the list is ``tail = C2 ... CN``

- the linearization of C is a list of classes: ``L[C] = [...]``

Consider a class C in a multiple inheritance hierarchy, with C inheriting from
the base classes ``B1, B2, ... , BN``. The linearization ``L[C]`` of the class C
is the sum of C and the merge of the linearizations of the parents and the
list of the parents::
  L[C(B1 ... BN)] = C + merge(L[B1], ..., L[BN], B1 ... BN)
where the ``merge()`` operation produces a list of classes. Each element
in the merged list, from left to right, is generated by the following procedure:

1. consider the head of the first list, i.e ``L[B1][0]```` as a candidate. Look
   at the candidate in all other lists.  If candidate class is not in the tail of
   any of the other lists, then add it to the linearization of C and remove it
   from all the lists in the merge.

2. Otherwise skip to consider the head of the next list as a candidate, until
   a matching class is found.

3. If the heads of all lists are tried but a match is not found, we say C3 MRO
   is failed for the class C and the linearization ``L[C]`` can not be established.

discussion
----------
C3 linearization is good because it preserves local precedence.

implementation
--------------
- python 2.3+ uses C3 MRO.
